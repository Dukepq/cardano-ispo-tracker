// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(BASIC)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  session   Session? @relation(fields: [sessionId], references: [id])
  sessionId String?  @unique
}

model Session {
  id        String   @id @default(uuid())
  sid       String   @unique
  data      String   @db.MediumText
  expiresAt DateTime
  user      User?
}

enum Role {
  BASIC
  EDITOR
  ADMIN
}

model Project {
  id                     String                @id @default(uuid())
  name                   String
  token                  String                @unique
  websiteURL             String?
  logoImageURL           String?
  description            String?
  maxSupplyExists        Boolean?
  maxSupply              Int?
  distributingPercentage Int?
  distributingAmount     Int
  takesRewards           RewardTakingBehaviour @default(NOT_SPECIFIED)
  live                   Boolean
  pools                  Pool[]
  categories             Category[]
  createdAt              DateTime              @default(now())
  updatedAt              DateTime              @updatedAt
}

model Pool {
  id              String   @id @default(uuid())
  owner           Project  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  project_id      String
  ticker          String   @unique
  name            String?
  poolId          String   @unique
  amountInPool    Int
  committedPledge Int?
  activePledge    Int?
  lifetimeRewards Int?
  lifetimeBlocks  Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  projects Project[]
}

enum RewardTakingBehaviour {
  NONE
  PARTIAL
  OPTIONAL
  ALL
  NOT_SPECIFIED
}
